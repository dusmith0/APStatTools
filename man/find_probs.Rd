% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_probs.R
\name{find_probs}
\alias{find_probs}
\title{Title find_probs()}
\usage{
find_probs(
  bound = NULL,
  type = "normal",
  tail = "left",
  mean = 0,
  sd = 1,
  df = 1,
  prob = 0.5,
  trials = 10,
  inverse = FALSE
)
}
\arguments{
\item{bound}{Input Vector of length one or two: c(left,right).
This is to define the boundaries of the shaded region of the graph.
Notes: "inner" and "two" require both the left and right input.
Notes: The default of NULL will always produce an error. (This is intentional)}

\item{type}{Input String being any of "normal", "t-dist", "chi-squared", "binomial"}

\item{tail}{Input String being any of "left", "right", "inner", "outer" or "two", "left_not_equal", "right_not_equal"
Notes: "left_not_equal" and "left_not_equal" are intended for the "binomial" only.
Notes: "out" and "two" will produce the same output.}

\item{mean}{Input Numeric: Default = 0
Vector of one value. The mean of the distribution}

\item{sd}{Input Numeric: Default = 1
Vector of one value. The standard deviation of a distribution.}

\item{df}{Input Numeric: Default = 1
Vector of one value. The degree of freedom of a distribution.}

\item{prob}{Input Numeric: Default = .5
Vector of one value. The probability of success in the binomial distribution.}

\item{trials}{Input Numeric: Default = 10
Vector of one value. The number of trials in the binomial distribution.}

\item{inverse}{Input Logical: Default = FALSE
If true the function will assume bound is a Area, and the function will attempt to find the
quantile that produces a probability of "bound"
Note: This function assumes only "left" as a tail. Imputing other tails will have no effect on the output.}
}
\value{
Numeric: Probability = being the calculated probability of the region supplied. (The cdf)
        Numeric: Value = being the calculated value that produces the area supplied in bound. (the quantile)
}
\description{
Title find_probs()
}
\examples{
# Will assume Normal
find_probs(1.5)

# For multiple outputs for the Normal
find_probs(c(-3,-2,-1,0,1,2,3))


# Probability between two points of a chi-squared
find_probs(c(-1,3),type="chi-squared",tail="inner",df=4)

# Using a t-distribution
find_probs(c(-1,3),type="t-dist",tail="right",df=4)

# To find the outside tailed probabilities
find_probs(c(2,6),type="binomial",tail="two")
find_probs(c(2,6),type="binomial",tail="outer")
find_probs(4,type="binomial",tail="left")
find_probs(4,type="binomial",tail="left_not_equal")

# Finding inverses
find_probs(bound = .4, inverse = TRUE)
find_probs(bound = .8, mean = 10, sd = 4, inverse = TRUE)

}
