% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_dist.R
\name{build_dist}
\alias{build_dist}
\title{Title build_dist()}
\usage{
build_dist(
  type = "normal",
  tail = "left",
  bound = NULL,
  df = 1,
  prob = 0.5,
  trials = 10,
  display_prob = FALSE
)
}
\arguments{
\item{type}{string being any of "normal", "t-dist", "chi-squared", "binomial"}

\item{tail}{string being any of "left", "right", "inner", "outer" or "two", "left_not_equal", "right_not_equal"
Notes: "left_not_equal","left_not_equal","inner_not_equal", and "two_not_equal" are intended for the "binomial" only.
Notes: "out" and "two" will produce the same output.}

\item{bound}{vector of length one or two: c(left,right). This is to define the boundaries of the shaded region of the graph.
Notes: "inner" and "two" require both the left and right input.}

\item{df}{numeric single value for the degree of freedom}

\item{prob}{numeric value for the probability of success. Imputing values of greater than 1 may cause errors.}

\item{trials}{numeric value for the number of trials that will occur for the "binomial"}

\item{display_prob}{logical If true this will print the probability of the shaded region along with the graphic.}
}
\value{
Graph using the plot() function, along with an optional numeric vector of one.
}
\description{
Title build_dist()
}
\examples{
# For the Standard Normal
build_dist()

# For t-distribution with a degree of freedom of 1
build_dist(type = "t-dist")

# For a binomial distribution
build_dist(type = "binomial")

# Shading different sections
build_dist(type = "normal", bound = -1)
build_dist(type = "normal", bound = c(-1,2), tail = "inner")
build_dist(type = "t-dist", bound = c(-1,0), tail = "two")
build_dist(type = "binomial",bound = c(6,12), tail = "outer", p = .5, trials = 20)

# adding probabilities to the graphics
build_dist(type = "normal", bound = -1, display_prob = TRUE)
build_dist(type = "normal", bound = c(-1,2), tail = "inner", display_prob = TRUE)
build_dist(type = "t-dist", bound = c(-1,0), tail = "two", display_prob = TRUE)
build_dist(type = "binomial",bound = c(6,12), tail = "outer", p = .5, trials = 20, display_prob = TRUE)

}
